# 영일이는 생명과학에 관심이 생겨 왕개미를 연구하고 있었다.

# 왕개미를 유심히 살펴보던 중 특별히 성실해 보이는 개미가 있었는데,
# 그 개미는 개미굴에서 나와 먹이까지 가장 빠른 길로 이동하는 것이었다.

# 개미는 오른쪽으로 움직이다가 벽을 만나면 아래쪽으로 움직여 가장 빠른 길로 움직였다.
# (오른쪽에 길이 나타나면 다시 오른쪽으로 움직인다.)

# 이에 호기심이 생긴 영일이는 그 개미를 미로 상자에 넣고 살펴보기 시작하였다.

# 미로 상자에 넣은 개미는 먹이를 찾았거나, 더 이상 움직일 수 없을 때까지
# 오른쪽 또는 아래쪽으로만 움직였다.

# 미로 상자의 구조가 0(갈 수 있는 곳), 1(벽 또는 장애물)로 주어지고,
# 먹이가 2로 주어질 때, 성실한 개미의 이동 경로를 예상해보자.

# 단, 맨 아래의 가장 오른쪽에 도착한 경우, 더 이상 움직일 수 없는 경우, 먹이를 찾은 경우에는
# 더이상 이동하지 않고 그 곳에 머무른다고 가정한다.

# 미로 상자의 테두리는 모두 벽으로 되어 있으며,
# 개미집은 반드시 (2, 2)에 존재하기 때문에 개미는 (2, 2)에서 출발한다.

m=[]
for i in range(12) :
    m.append([])
    for j in range(12) :
        m[i].append(0)
for i in range(10) :
    a=input().split()
    for j in range(10) :
        m[i+1][j+1]=int(a[j])
x = 2
y = 2
while True :
    if m[x][y] == 0 :
        m[x][y] = 9
    elif m[x][y] == 2 :
        m[x][y] = 9
        break
    if (m[x][y+1]==1 and m[x+1][y]==1) or (x==9 and y==9) :
        break
    if m[x][y+1] != 1 :
        y += 1
    elif m[x+1][y] != 1 :
        x += 1
for i in range(1, 11) :
    for j in range(1, 11) :
        print(m[i][j], end=' ')
    print()


# array = []
# for i in range(10):
#     array.append(list(map(int, input().split())))
# x, y = 1, 1
# while True:
#    if (array[x][y] == 0):
#         array[x][y] = 9
#    elif (array[x][y] == 2):
#         array[x][y] = 9
#         break
#    if ((array[x][y+1] == 1 and array[x+1][y] == 1)):
#        break
#    if (array[x][y+1] != 1):
#        y = y + 1
#    elif (array[x+1][y] != 1):
#        x = x + 1
# for i in range(10):
#    for j in range(10):
#        print(array[i][j], end=' ')
#    print()

# 먼저 입력을 array라는 리스트에 2차원 배열로 입력받습니다. 그리고 while 반복문을 사용합니다.
# while 반복문에서는 1. 현재 칸이 0이라면 9로 변환하고, 현재 칸이 2라면 9로 변환한 뒤 반복문을 종료시킵니다.
# 2. 오른쪽과 아래가 모두 1이라면 반복문을 종료시킵니다.
# 3. 오른쪽이 1이 아니라면 y를 증가시키고, 오른쪽이 1이고 아래쪽이 1이 아니라면 x를 증가시킵니다.
# 그리고 마지막에 이중 for 반복문으로 출력을 해주면 됩니다.
# 저는 왼쪽 가장 위 칸을 (0,0)으로 지정했고, 모범 답안에서는 (1,1)로 지정해서 코드가 살짝 다른 것 같습니다.
# 위와 같은 프로세스를 순서대로 따라가면서 코드를 구현하면 답을 구할 수 있습니다.

